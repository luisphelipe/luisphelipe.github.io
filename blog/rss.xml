<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Aprendendo React]]></title><description><![CDATA[Artigos sobre Javascript e React]]></description><link>https://luisphelipe.me/blog</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 09 Sep 2019 12:37:13 GMT</lastBuildDate><item><title><![CDATA[Entendendo ES6]]></title><description><![CDATA[Introducao Se voce ja teve dificuldade de entender o que estava acontecendo olhando para o codigo de um aplicativo feito em React, seu…]]></description><link>https://luisphelipe.me/blog/Entendendo ES6/</link><guid isPermaLink="false">https://luisphelipe.me/blog/Entendendo ES6/</guid><pubDate>Mon, 09 Sep 2019 11:58:47 GMT</pubDate><content:encoded>&lt;h2&gt;Introducao&lt;/h2&gt;
&lt;p&gt;Se voce ja teve dificuldade de entender o que estava acontecendo olhando para o codigo de um aplicativo feito em React, seu problema provavelmente foi que voce nao entende a sintaxe do Javascript moderno. O objetivo desse artigo e sumarizar os &lt;em&gt;constructs&lt;/em&gt;(?) e &lt;em&gt;sintax-sugars&lt;/em&gt; introduzidos pelo ES6. este artigo presume que voce tenha um conhecimento basico de Javascript. Se voce esta comecando com javascript, recomendo ler os capitulos 1 e 2, do &lt;a href=&quot;https://github.com/cezaraugusto/You-Dont-Know-JS/tree/portuguese-translation/up%20%26%20going#you-dont-know-js-iniciando&quot;&gt;primeiro livro&lt;/a&gt; da serie Voce Nao Sabe Javascript.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Dica&lt;/em&gt;: releia as partes relevantes deste artigo quando estiver com dificuldade relacionada a algo especifico do ES6. Eu precisei fazer isso varias vezes pra finalmente entender &lt;em&gt;promises&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Conteudo desse Artigo:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;let and const (block scoped - never use global scoped var again)&lt;/li&gt;
&lt;li&gt;object and array destructuring&lt;/li&gt;
&lt;li&gt;backtics as template literals (template interpolation syntax sugar) &lt;/li&gt;
&lt;li&gt;arrow functions (and syntax for inline arrow function that returns imediattely)&lt;/li&gt;
&lt;li&gt;promises (better than callbacks)&lt;/li&gt;
&lt;li&gt;async await (sintax sugar for promisses)&lt;/li&gt;
&lt;li&gt;modules - import x from y, and export x (versus es6 module.exports and require(&quot;&quot;))&lt;/li&gt;
&lt;li&gt;spread operator (…)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Some important stuff from pre-ES6:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;array manipulation &lt;a href=&quot;https://im-thal.es/&quot;&gt;checkout this blog from Thales&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;syntax for understanding object literals (attributes and methods)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Less important ES6 stuff&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;for of (iterating over the values of an array)&lt;/li&gt;
&lt;li&gt;default value for functions parameters&lt;/li&gt;
&lt;li&gt;classes&lt;/li&gt;
&lt;li&gt;backtics as multi-line string&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Resources&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;tirei os exemplos (e provavelmente descricao) desse &lt;a href=&quot;https://github.com/lukehoban/es6features#ecmascript-6-gitioes6features&quot;&gt;esse arquivo&lt;/a&gt; no Github&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>